# Generated by Django 5.0.1 on 2024-01-14 04:18

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fakultety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Факультет',
                'verbose_name_plural': 'Факультеты',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('employee', 'Employee'), ('department_head', 'Department Head')], max_length=20)),
                ('surename', models.CharField(max_length=40, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Kafedry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('fakultet_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.fakultety')),
                ('zav', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Кафедра',
                'verbose_name_plural': 'Кафедры',
            },
        ),
        migrations.CreateModel(
            name='NIR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('date_start', models.DateTimeField(null=True)),
                ('type', models.CharField(choices=[('ol', 'олимпиада'), ('vs', 'выставка'), ('kf', 'конференция')], max_length=3)),
                ('Fakultet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.fakultety')),
            ],
            options={
                'verbose_name': 'НИР',
                'verbose_name_plural': 'НИРы',
            },
        ),
        migrations.CreateModel(
            name='sotrudnikyiOnKafedra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.CharField(choices=[('te', 'teacher'), ('as', 'asperan')], max_length=3)),
                ('degree', models.CharField(choices=[('kn', 'kandidat nauk'), ('mg', 'magistr'), ('dn', 'doktor nauk'), ('bk', 'bakalavr')], max_length=3)),
                ('kafedra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.kafedry')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Сотрудник на кафедре',
                'verbose_name_plural': 'Сотрудники на кафедре',
            },
        ),
        migrations.CreateModel(
            name='orgkomitety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isAgent', models.BooleanField(default=False)),
                ('isParticipent', models.BooleanField(default=False)),
                ('nir', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.nir')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.sotrudnikyionkafedra')),
            ],
            options={
                'verbose_name': 'Оргкомитет НИРа',
                'verbose_name_plural': 'Огркомитеты НИРа',
            },
        ),
        migrations.CreateModel(
            name='spetsialnosti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('kafedra_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.kafedry')),
            ],
            options={
                'verbose_name': 'Специальность',
                'verbose_name_plural': 'Специальности',
            },
        ),
        migrations.CreateModel(
            name='gruppy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shifr', models.CharField(max_length=100, unique=True)),
                ('spetsialnost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.spetsialnosti')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='studenty',
            fields=[
                ('num_zachetka', models.IntegerField(primary_key=True, serialize=False)),
                ('gruppa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.gruppy')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
            },
        ),
        migrations.CreateModel(
            name='uchastnikyOnNIR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isParticipent', models.BooleanField(default=False)),
                ('nir', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.nir')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.studenty')),
            ],
            options={
                'verbose_name': 'Участник НИРа',
                'verbose_name_plural': 'Участники НИРа',
            },
        ),
    ]
